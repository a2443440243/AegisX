/*!
 * Bootstrap v5.3.0 (https://getbootstrap.com/)
 * Copyright 2011-2023 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 */

// Simplified Bootstrap JavaScript for local use
// This is a minimal implementation to maintain basic functionality

(function() {
    'use strict';
    
    // Basic modal functionality
    window.bootstrap = window.bootstrap || {};
    
    // Modal class
    class Modal {
        constructor(element, options = {}) {
            this._element = element;
            this._options = options;
        }
        
        show() {
            this._element.style.display = 'block';
            this._element.classList.add('show');
            document.body.classList.add('modal-open');
        }
        
        hide() {
            this._element.style.display = 'none';
            this._element.classList.remove('show');
            document.body.classList.remove('modal-open');
        }
        
        toggle() {
            if (this._element.classList.contains('show')) {
                this.hide();
            } else {
                this.show();
            }
        }
        
        static getInstance(element) {
            return element._bsModal;
        }
        
        static getOrCreateInstance(element, config = {}) {
            return this.getInstance(element) || new this(element, config);
        }
    }
    
    // Collapse class
    class Collapse {
        constructor(element, options = {}) {
            this._element = element;
            this._options = options;
        }
        
        show() {
            this._element.style.display = 'block';
            this._element.classList.add('show');
        }
        
        hide() {
            this._element.style.display = 'none';
            this._element.classList.remove('show');
        }
        
        toggle() {
            if (this._element.classList.contains('show')) {
                this.hide();
            } else {
                this.show();
            }
        }
        
        static getInstance(element) {
            return element._bsCollapse;
        }
        
        static getOrCreateInstance(element, config = {}) {
            return this.getInstance(element) || new this(element, config);
        }
    }
    
    // Dropdown class
    class Dropdown {
        constructor(element, options = {}) {
            this._element = element;
            this._options = options;
        }
        
        show() {
            const menu = this._element.nextElementSibling;
            if (menu) {
                menu.classList.add('show');
            }
        }
        
        hide() {
            const menu = this._element.nextElementSibling;
            if (menu) {
                menu.classList.remove('show');
            }
        }
        
        toggle() {
            const menu = this._element.nextElementSibling;
            if (menu) {
                menu.classList.toggle('show');
            }
        }
        
        static getInstance(element) {
            return element._bsDropdown;
        }
        
        static getOrCreateInstance(element, config = {}) {
            return this.getInstance(element) || new this(element, config);
        }
    }
    
    // Tab class
    class Tab {
        constructor(element, options = {}) {
            this._element = element;
            this._options = options;
        }
        
        show() {
            // Remove active from all tabs
            const tabList = this._element.closest('.nav');
            if (tabList) {
                tabList.querySelectorAll('.nav-link').forEach(tab => {
                    tab.classList.remove('active');
                });
            }
            
            // Add active to current tab
            this._element.classList.add('active');
            
            // Show corresponding tab pane
            const target = this._element.getAttribute('data-bs-target') || this._element.getAttribute('href');
            if (target) {
                const tabPane = document.querySelector(target);
                if (tabPane) {
                    // Hide all tab panes
                    const tabContent = tabPane.closest('.tab-content');
                    if (tabContent) {
                        tabContent.querySelectorAll('.tab-pane').forEach(pane => {
                            pane.classList.remove('show', 'active');
                        });
                    }
                    
                    // Show current tab pane
                    tabPane.classList.add('show', 'active');
                }
            }
        }
        
        static getInstance(element) {
            return element._bsTab;
        }
        
        static getOrCreateInstance(element, config = {}) {
            return this.getInstance(element) || new this(element, config);
        }
    }
    
    // Assign to bootstrap namespace
    window.bootstrap.Modal = Modal;
    window.bootstrap.Collapse = Collapse;
    window.bootstrap.Dropdown = Dropdown;
    window.bootstrap.Tab = Tab;
    
    // Auto-initialize components
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize modals
        document.querySelectorAll('[data-bs-toggle="modal"]').forEach(trigger => {
            trigger.addEventListener('click', function(e) {
                e.preventDefault();
                const target = this.getAttribute('data-bs-target');
                if (target) {
                    const modal = document.querySelector(target);
                    if (modal) {
                        const modalInstance = Modal.getOrCreateInstance(modal);
                        modalInstance.show();
                    }
                }
            });
        });
        
        // Initialize dropdowns
        document.querySelectorAll('[data-bs-toggle="dropdown"]').forEach(trigger => {
            trigger.addEventListener('click', function(e) {
                e.preventDefault();
                const dropdownInstance = Dropdown.getOrCreateInstance(this);
                dropdownInstance.toggle();
            });
        });
        
        // Initialize tabs
        document.querySelectorAll('[data-bs-toggle="tab"]').forEach(trigger => {
            trigger.addEventListener('click', function(e) {
                e.preventDefault();
                const tabInstance = Tab.getOrCreateInstance(this);
                tabInstance.show();
            });
        });
        
        // Initialize collapse
        document.querySelectorAll('[data-bs-toggle="collapse"]').forEach(trigger => {
            trigger.addEventListener('click', function(e) {
                e.preventDefault();
                const target = this.getAttribute('data-bs-target');
                if (target) {
                    const collapseElement = document.querySelector(target);
                    if (collapseElement) {
                        const collapseInstance = Collapse.getOrCreateInstance(collapseElement);
                        collapseInstance.toggle();
                    }
                }
            });
        });
        
        // Close modals when clicking backdrop
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('modal')) {
                const modalInstance = Modal.getInstance(e.target);
                if (modalInstance) {
                    modalInstance.hide();
                }
            }
        });
        
        // Close dropdowns when clicking outside
        document.addEventListener('click', function(e) {
            if (!e.target.closest('.dropdown')) {
                document.querySelectorAll('.dropdown-menu.show').forEach(menu => {
                    menu.classList.remove('show');
                });
            }
        });
    });
    
})();